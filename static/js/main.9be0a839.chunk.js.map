{"version":3,"sources":["redux/Action-type/actionType.js","component/Todo.js","redux/Action-content/actionCreater.js","component/TodoInput.js","component/UpdateTodo.js","component/EditTodo.js","component/Login.js","component/Header.js","App.js","redux/Action-reducer/reducer.js","redux/Action-reducer/index.js","redux/store.js","index.js"],"names":["ActionType","Todo","listItem","useSelector","state","allList","taskList","dispatch","useDispatch","clickHandler","id","type","payload","length","className","map","item","onClick","to","label","description","TodoInput","useState","list","setList","textValue","setTextValue","onSubmit","e","preventDefault","textarea","Math","random","toString","slice","addTodo","alert","value","placeholder","onChange","target","rows","UpdateTodo","EditTodo","listId","useParams","navigate","useNavigate","filter","filterList","useEffect","updateTodo","Login","username","password","inputVal","setInputVal","userErr","setUserErr","changeHandler","name","handleLogin","a","test","localStorage","setItem","htmlFor","Header","isActive","setIsActive","Navigate","getToken","getItem","userLoggedIn","split","App","path","element","initialState","reducer","listIt","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9be0a839.chunk.js","sourcesContent":["export const ActionType = {\r\n    ADD_TODO: 'ADD_TODO',\r\n    DELETE_TODO: 'DELETE_TODO',\r\n    UPDATE_TODO: 'UPDATE_TODO'\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {deleteTodo} from '../redux/Action-content/actionCreater'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Todo() {\r\n    \r\n    const listItem = useSelector(state => state.allList.taskList)\r\n    const dispatch = useDispatch();\r\n    const clickHandler = (id) => {\r\n        dispatch(deleteTodo(id))\r\n    }\r\n\r\n    return (\r\n        (listItem && listItem.length === 0) ? (\r\n            <div className=\"ui segment container\">\r\n                <p>No List Found</p>\r\n            </div>\r\n        ) : (<div className=\"ui grid centered container\">\r\n                {listItem.map(item => <div className=\"four wide column\" key={item.id}>\r\n\r\n                        <div className=\"ui positive message\">\r\n                            <i className=\"close icon\" onClick={() => clickHandler(item.id)}></i>\r\n                            <div className=\"header\">\r\n                                <Link to={`edit/${item.id}`}>\r\n                                    {item.label}\r\n                                </Link>\r\n                            </div>\r\n                            <p>{item.description}</p>\r\n                        </div>\r\n                    </div>)}\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import { ActionType } from \"../Action-type/actionType\";\r\n\r\nexport const addTodo = (list,textarea) => {\r\n    return {\r\n        type: ActionType.ADD_TODO,\r\n        payload: {\r\n            label: list,\r\n            description: textarea,\r\n            id: Math.random().toString(16).slice(2)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateTodo = (list,textarea,id) => {\r\n    return{\r\n        type: ActionType.UPDATE_TODO,\r\n        payload: {\r\n            label: list,\r\n            description: textarea,\r\n            id:id\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (list) => {\r\n    return {\r\n        type: ActionType.DELETE_TODO,\r\n        payload: list\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {addTodo} from '../redux/Action-content/actionCreater'\r\nfunction TodoInput() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [list,setList] = useState('');\r\n    const [textValue, setTextValue] = useState('');\r\n    const addHandler = (e) => {\r\n        e.preventDefault();\r\n        if(list != '' && textValue != ''){\r\n            dispatch(addTodo(list,textValue));\r\n            setList('');\r\n            setTextValue('')\r\n        }else{\r\n            alert('Please fill blank filed')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"ui grid centered container\">\r\n            <div className=\"eight wide column\">\r\n                <div className=\"ui segment\">\r\n                    <h2 className=\"ui floated header\">Add Task</h2>\r\n                    <div className=\"ui clearing divider\"></div>\r\n                    <form onSubmit={addHandler} className=\"ui form\">\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" \r\n                                value={list} \r\n                                placeholder=\"Add Title\" \r\n                                onChange={(e) => setList(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <textarea rows=\"2\" \r\n                            value={textValue} \r\n                            placeholder=\"Add Note...\"  \r\n                            onChange={(e) => setTextValue(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"submit\" className=\"ui primary button\" value=\"Add Task\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoInput\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport TodoInput from './TodoInput'\r\n\r\nfunction UpdateTodo() {\r\n    return (\r\n        <div>\r\n            <TodoInput /> \r\n            <Todo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateTodo\r\n","import React, {useEffect, useState } from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { useParams ,useNavigate  } from 'react-router-dom'\r\nimport {updateTodo} from '../redux/Action-content/actionCreater'\r\nfunction EditTodo() {\r\n    const [list,setList] = useState();\r\n    const [textValue, setTextValue] = useState();\r\n    const {listId} = useParams();\r\n    const navigate = useNavigate();\r\n    const listItem = useSelector(state => state.allList.taskList);\r\n    const dispatch = useDispatch();\r\n    const [filterList] = listItem.filter(list => (list.id === listId));\r\n    useEffect(() => {\r\n        setList(filterList.label);\r\n        setTextValue(filterList.description)\r\n    },[filterList]);\r\n    const updateHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateTodo(list,textValue,listId));\r\n        navigate(-1)\r\n    }\r\n    return (\r\n        <div className=\"ui grid centered container\">\r\n            <div className=\"eight wide column\">\r\n                <div className=\"ui segment\">\r\n                    <h2 className=\"ui floated header\">Update Note</h2>\r\n                    <div className=\"ui clearing divider\"></div>\r\n                    <form onSubmit={updateHandler} className=\"ui form\">\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" \r\n                                value={list} \r\n                                placeholder=\"Add Title\" \r\n                                onChange={(e) => setList(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <textarea rows=\"2\" \r\n                            value={textValue} \r\n                            onChange={(e) => setTextValue(e.target.value)} \r\n                            placeholder=\"Description\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"submit\" className=\"ui primary button\" value=\"Update Task\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nfunction Login() {\r\n    let navigate = useNavigate()\r\n    const [inputVal,setInputVal] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [userErr, setUserErr] = useState('');\r\n    const changeHandler = (e) => {\r\n        setInputVal({\r\n            ...inputVal,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleLogin = async (e) =>{\r\n        e.preventDefault();\r\n        \r\n        let filter = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(inputVal.username === ''){\r\n            setUserErr('Username is not blank')\r\n        }else if(inputVal.password === ''){\r\n            setUserErr('Password is not blank')\r\n        }else if(!filter.test(inputVal.username)){\r\n            setUserErr('Please enter valid email')\r\n        }else{\r\n            localStorage.setItem(\"user-loggedIn\", inputVal.username)\r\n            navigate(`/update`)\r\n            setUserErr('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section>\r\n            <div className=\"ui grid centered container\">\r\n                <div className=\"eight wide column\">\r\n                    <div className=\"ui segment\">\r\n                        <h2 className='display-7'>Login</h2>\r\n                        <form className=\"ui form\" onSubmit={handleLogin}>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"username\" className=\"mb-2\">\r\n                                    Email address\r\n                                </label>\r\n                                <input type=\"text\" name=\"username\" id=\"username\" className=\"form-control\" value={inputVal.username} onChange={changeHandler} placeholder=\"Enter your email\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"password\" className=\"mb-2\">\r\n                                    Password\r\n                                </label>\r\n                                <input type=\"password\" name=\"password\" id=\"password\" value={inputVal.password} onChange={changeHandler} className=\"form-control\" placeholder=\"Enter your password\" />\r\n                                <div className='color-red text-right'>\r\n                                    {userErr}\r\n                                </div>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <button type=\"submit\" className=\"ui primary button\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const [isActive, setIsActive] = useState(false)\r\n    let Navigate = useNavigate();\r\n    const getToken = localStorage.getItem(\"user-loggedIn\")\r\n    const userLoggedIn = getToken ? true : false\r\n    const handleLogout = () => {\r\n        localStorage.setItem('user-loggedIn','')\r\n        Navigate('/Todo')\r\n        setIsActive(false);\r\n    }\r\n    const handleDropdown = () => {\r\n        setIsActive(!isActive)\r\n    }\r\n  return <div className=\"ui top attached header\">\r\n            <i className=\"edit outline icon\"></i>\r\n            <div className=\"content\">\r\n                Todo App\r\n            </div>\r\n            {userLoggedIn && (\r\n                <div className='d-flex align-items-center position-relative loginfo'>\r\n                    <div onClick={handleDropdown} className='d-inline-block profile'>\r\n                        {getToken.split('@')[0]}\r\n                        <i className='angle down icon'></i>\r\n                    </div>\r\n                    <span className={`profileLogout ${isActive ? 'active' : ''}`} onClick={handleLogout}>Logout</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n}\r\n\r\nexport default Header;\r\n","import './App.css';\nimport UpdateTodo from './component/UpdateTodo';\nimport EditTodo from './component/EditTodo';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from './component/Login';\nimport Header from './component/Header';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/Todo\" element={<Login />}/>\n          <Route path=\"/update\" element={<UpdateTodo />} />\n          <Route path=\"update/edit/:listId\" element={<EditTodo />} />\n      </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionType } from \"../Action-type/actionType\";\r\n\r\nconst initialState = {\r\n    taskList: []\r\n}\r\n\r\nconst reducer = (state = initialState, {type,payload}) => {\r\n    switch(type){\r\n        case ActionType.ADD_TODO: return {\r\n            ...state,\r\n            taskList: [...state.taskList,payload ]\r\n        }\r\n        case ActionType.UPDATE_TODO: return{\r\n            ...state,\r\n            taskList: state.taskList.map(listIt => listIt.id === payload.id ? payload : listIt)\r\n        }\r\n        case ActionType.DELETE_TODO: return {\r\n            ...state,\r\n            taskList: state.taskList.filter(list => list.id !== payload)\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    allList: reducer\r\n})","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./Action-reducer\";\r\nconst store = createStore(rootReducer, {},window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}